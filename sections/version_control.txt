When working on a project, the ability to keep track of changes made by a creator over time, is essential to many facets of production, including revision, editing, moving between drafts, and collecting and implementing feedback. Collaboration demands further scaffolding of communication and distributed activity, such as facilitating concurrent access to the developing corpus of work, effectively managing how work and knowledge about the work-in-progress are shared, and enabling efficient movement between drafts and revisions. In the field of software engineering, version control systems (VCS) are employed by developers to mitigate these issues by storing code in digital archives — referred to as repositories — which contain details about the history of the project, contributions, and other useful metrics (Bird et al. 2009; Carlsson 2013). Drawing on literature from [[the Performance and Culture course including Lavender, Bay-Cheng, Harvie, and Taylor; distributed creativity, and mining software repositories (MSR)]] this paper presents a vision towards use of VCS in the contexts of performance studies and distributed creativity research, and will leverage the VCS model ‘git’ as a research-creation tool in presenting a detailed account of this paper’s own ontogenesis. 

\emph{Centralized version control} systems, such as Subversion and Concurrent Versioning System [cite] host the code at a single remote location, permitting developers temporary access to a portion of the codebase for modification. [cite] Decentralized version control (DVC), by contrast, is an example of a distributed approach to VCS, and operates on a peer-to-peer model, enabling the entire repository to be stored locally on all machines affiliated with the project, (O’Sullivan 2009) as well as in the cloud. This facilitates temporally and geographically displaced contributions, offline work, and simultaneous document editing. (Kalliamvakou et al 2014)



A popular DVC is git. With git, the DVC workflow comprises three primary actions: the retrieval of up-to-date code from the remote repository to a local repository on the developer’s machine, called a \emph{pull request}; the logging of the modification of work in the local repository, called a \emph{commit}, which contains a description of the change and reason(s) for its occurrence, written by the author of the change; and the uploading of files staged in commits, called a push. 

Built on top of git is Github.com, the most prominent service offering a DVC platform. As of late 2016, Github.com hosts over 21 million publicly available repositories in the cloud. 

Of particular interest to performance studies scholarship is the curious fact that such systems are not limited solely to the indexing of code. Rather, most file extensions may be archived and tracked, including those used often in writing and research, such as .docx, .xls, and .txt. At this outset, the author hypothesizes that the ability to freely distribute an artwork-in-process and concurrently analyze its content and social [connectivity? network?] both quantitatively -- i.e. usage metrics, pattern recognition on the contents of the docs, etc -- and qualitatively -- i.e. ethnographic study of the commit messages, grounded theory analysis of issue or bug messages, etc -- is of fascinating consequence. [[weave in arguments from bay-cheng, lavender?]]

As a corollary to this assertion of using git as both an archival and revision tool in non-software development practices, this paper as a work-in-progress is currently hosted at https://michaelpalumbo.github.io/self-referent/ , and is being composed along a rule that deems changes be committed frequently and verbosely.  As an example of two commits pertaining to the development of this very sentence, see [commit 0881828f4ad5578b870a7ba32773e28000c10b11]
 , and then [commit ed35d4f5016282efbc67a8cd7b6d81a0048a9217] . This is significant in that the author has in past solo endeavours opted to work in long sprints of activity between documentation. What documentation does emerge from these processes is at most frequent made in haste following the end of a session. This coarse degree of resolution hinders future effort to speculate on decisions made and to imagine recourse for ongoing work. Further, it has been the experience of this author that such an opaque visibility of the decision-making in a creative work impedes its opening up to future collaboration. [cite the following:] that increased frequency of work contribution segmentations coincide with greater reflexivity in process, and aid in cognitive load. [[Matthew Gaudet said that my “conversational commits … feel similar .. [to] ‘rubber duck’ debugging; the idea being you explain the problem to a rubber duck in your office and it helps you identify gaps in your thinking and solve the problem.” (private correspondence 2017-04-30)

: excerpts from the author’s commit comments; visualizations of the comparison of changes; and trends in the author’s process, including attentional detail and affect. 

Git stores all elements associated with a project — be it PDFs annotated by the author, drafts, discarded drafts, edits, etc. — in a public repository. 




logged, as often as possible, in what is referred to as the ‘commit history’, 

 the archival of software source code and project collaborator contributions is made possible by a tool referred to as version control systems (VCS)

 at times in a  to this dynamic by requiring participants have access to this developing corpus of work.

 In online collaboration, access to a project is distributed  at time concurrently, and at other times concurrent access to source code.

When it comes to collaboration and collaboration.

all or part of a repository to be stored locally on all machines affiliated with the project, 

 



Github, a popular DVC platform built on top of git, offers developers with a cloud-based hosting service for project repositories. 


 With this it becomes necessary to keep track of changes and 


Further, other traces of creator-artefact and creator-creator interactions are also recorded, such as 


